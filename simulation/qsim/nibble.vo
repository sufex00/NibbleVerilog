// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "11/18/2016 00:39:35"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module main (
	clk,
	clrn,
	out);
input 	clk;
input 	clrn;
output 	[7:0] out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \out[0]~output_o ;
wire \out[1]~output_o ;
wire \out[2]~output_o ;
wire \out[3]~output_o ;
wire \out[4]~output_o ;
wire \out[5]~output_o ;
wire \out[6]~output_o ;
wire \out[7]~output_o ;
wire \clk~input_o ;
wire \center|Mux0~0_combout ;
wire \clrn~input_o ;
wire \center|WideOr1~0_combout ;
wire \center|state[2]~0_combout ;
wire \PC|Data_out[0]~1_combout ;
wire \PC|Data_out[1]~2_combout ;
wire \PC|Data_out[2]~3_combout ;
wire \PC|Data_out[3]~4_combout ;
wire \PC|Data_out[4]~0_combout ;
wire \rom|rom~0_combout ;
wire \reg_R|Data_out[0]~0_combout ;
wire \out[0]~reg0_q ;
wire [4:0] \PC|Data_out ;
wire [23:0] \rom|q ;
wire [2:0] \center|state ;
wire [7:0] \reg_R|Data_out ;


cyclonev_io_obuf \out[0]~output (
	.i(\out[0]~reg0_q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[0]~output .bus_hold = "false";
defparam \out[0]~output .open_drain_output = "false";
defparam \out[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[1]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[1]~output .bus_hold = "false";
defparam \out[1]~output .open_drain_output = "false";
defparam \out[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[2]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[2]~output .bus_hold = "false";
defparam \out[2]~output .open_drain_output = "false";
defparam \out[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[3]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[3]~output .bus_hold = "false";
defparam \out[3]~output .open_drain_output = "false";
defparam \out[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[4]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[4]~output .bus_hold = "false";
defparam \out[4]~output .open_drain_output = "false";
defparam \out[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[5]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[5]~output .bus_hold = "false";
defparam \out[5]~output .open_drain_output = "false";
defparam \out[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[6]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[6]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[6]~output .bus_hold = "false";
defparam \out[6]~output .open_drain_output = "false";
defparam \out[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \out[7]~output (
	.i(gnd),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\out[7]~output_o ),
	.obar());
// synopsys translate_off
defparam \out[7]~output .bus_hold = "false";
defparam \out[7]~output .open_drain_output = "false";
defparam \out[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \center|Mux0~0 (
// Equation(s):
// \center|Mux0~0_combout  = (!\center|state [0]) # (\center|state [1])

	.dataa(!\center|state [1]),
	.datab(!\center|state [0]),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\center|Mux0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \center|Mux0~0 .extended_lut = "off";
defparam \center|Mux0~0 .lut_mask = 64'hDDDDDDDDDDDDDDDD;
defparam \center|Mux0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \clrn~input (
	.i(clrn),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clrn~input_o ));
// synopsys translate_off
defparam \clrn~input .bus_hold = "false";
defparam \clrn~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \center|state[0] (
	.clk(!\clk~input_o ),
	.d(\center|Mux0~0_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\center|state [0]),
	.prn(vcc));
// synopsys translate_off
defparam \center|state[0] .is_wysiwyg = "true";
defparam \center|state[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \center|WideOr1~0 (
// Equation(s):
// \center|WideOr1~0_combout  = (!\center|state [1] & ((\center|state [0]))) # (\center|state [1] & ((!\center|state [0]) # (\center|state [2])))

	.dataa(!\center|state [2]),
	.datab(!\center|state [1]),
	.datac(!\center|state [0]),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\center|WideOr1~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \center|WideOr1~0 .extended_lut = "off";
defparam \center|WideOr1~0 .lut_mask = 64'h3D3D3D3D3D3D3D3D;
defparam \center|WideOr1~0 .shared_arith = "off";
// synopsys translate_on

dffeas \center|state[1] (
	.clk(!\clk~input_o ),
	.d(\center|WideOr1~0_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\center|state [1]),
	.prn(vcc));
// synopsys translate_off
defparam \center|state[1] .is_wysiwyg = "true";
defparam \center|state[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \center|state[2]~0 (
// Equation(s):
// \center|state[2]~0_combout  = !\center|state [2] $ (((!\center|state [1]) # (!\center|state [0])))

	.dataa(!\center|state [2]),
	.datab(!\center|state [1]),
	.datac(!\center|state [0]),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\center|state[2]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \center|state[2]~0 .extended_lut = "off";
defparam \center|state[2]~0 .lut_mask = 64'h5656565656565656;
defparam \center|state[2]~0 .shared_arith = "off";
// synopsys translate_on

dffeas \center|state[2] (
	.clk(!\clk~input_o ),
	.d(\center|state[2]~0_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\center|state [2]),
	.prn(vcc));
// synopsys translate_off
defparam \center|state[2] .is_wysiwyg = "true";
defparam \center|state[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \PC|Data_out[0]~1 (
// Equation(s):
// \PC|Data_out[0]~1_combout  = !\center|state [2] $ (\PC|Data_out [0])

	.dataa(!\center|state [2]),
	.datab(!\PC|Data_out [0]),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\PC|Data_out[0]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \PC|Data_out[0]~1 .extended_lut = "off";
defparam \PC|Data_out[0]~1 .lut_mask = 64'h9999999999999999;
defparam \PC|Data_out[0]~1 .shared_arith = "off";
// synopsys translate_on

dffeas \PC|Data_out[0] (
	.clk(!\clk~input_o ),
	.d(\PC|Data_out[0]~1_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\PC|Data_out [0]),
	.prn(vcc));
// synopsys translate_off
defparam \PC|Data_out[0] .is_wysiwyg = "true";
defparam \PC|Data_out[0] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \PC|Data_out[1]~2 (
// Equation(s):
// \PC|Data_out[1]~2_combout  = !\PC|Data_out [1] $ (((!\PC|Data_out [0]) # (\center|state [2])))

	.dataa(!\center|state [2]),
	.datab(!\PC|Data_out [0]),
	.datac(!\PC|Data_out [1]),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\PC|Data_out[1]~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \PC|Data_out[1]~2 .extended_lut = "off";
defparam \PC|Data_out[1]~2 .lut_mask = 64'h2D2D2D2D2D2D2D2D;
defparam \PC|Data_out[1]~2 .shared_arith = "off";
// synopsys translate_on

dffeas \PC|Data_out[1] (
	.clk(!\clk~input_o ),
	.d(\PC|Data_out[1]~2_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\PC|Data_out [1]),
	.prn(vcc));
// synopsys translate_off
defparam \PC|Data_out[1] .is_wysiwyg = "true";
defparam \PC|Data_out[1] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \PC|Data_out[2]~3 (
// Equation(s):
// \PC|Data_out[2]~3_combout  = !\PC|Data_out [2] $ ((((!\PC|Data_out [0]) # (!\PC|Data_out [1])) # (\center|state [2])))

	.dataa(!\center|state [2]),
	.datab(!\PC|Data_out [0]),
	.datac(!\PC|Data_out [1]),
	.datad(!\PC|Data_out [2]),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\PC|Data_out[2]~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \PC|Data_out[2]~3 .extended_lut = "off";
defparam \PC|Data_out[2]~3 .lut_mask = 64'h02FD02FD02FD02FD;
defparam \PC|Data_out[2]~3 .shared_arith = "off";
// synopsys translate_on

dffeas \PC|Data_out[2] (
	.clk(!\clk~input_o ),
	.d(\PC|Data_out[2]~3_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\PC|Data_out [2]),
	.prn(vcc));
// synopsys translate_off
defparam \PC|Data_out[2] .is_wysiwyg = "true";
defparam \PC|Data_out[2] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \PC|Data_out[3]~4 (
// Equation(s):
// \PC|Data_out[3]~4_combout  = ( \PC|Data_out [3] & ( ((!\PC|Data_out [0]) # ((!\PC|Data_out [1]) # (!\PC|Data_out [2]))) # (\center|state [2]) ) ) # ( !\PC|Data_out [3] & ( (!\center|state [2] & (\PC|Data_out [0] & (\PC|Data_out [1] & \PC|Data_out [2]))) ) 
// )

	.dataa(!\center|state [2]),
	.datab(!\PC|Data_out [0]),
	.datac(!\PC|Data_out [1]),
	.datad(!\PC|Data_out [2]),
	.datae(!\PC|Data_out [3]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\PC|Data_out[3]~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \PC|Data_out[3]~4 .extended_lut = "off";
defparam \PC|Data_out[3]~4 .lut_mask = 64'h0002FFFD0002FFFD;
defparam \PC|Data_out[3]~4 .shared_arith = "off";
// synopsys translate_on

dffeas \PC|Data_out[3] (
	.clk(!\clk~input_o ),
	.d(\PC|Data_out[3]~4_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\PC|Data_out [3]),
	.prn(vcc));
// synopsys translate_off
defparam \PC|Data_out[3] .is_wysiwyg = "true";
defparam \PC|Data_out[3] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \PC|Data_out[4]~0 (
// Equation(s):
// \PC|Data_out[4]~0_combout  = ( \PC|Data_out [2] & ( \PC|Data_out [3] & ( !\PC|Data_out [4] $ ((((!\PC|Data_out [0]) # (!\PC|Data_out [1])) # (\center|state [2]))) ) ) ) # ( !\PC|Data_out [2] & ( \PC|Data_out [3] & ( \PC|Data_out [4] ) ) ) # ( \PC|Data_out 
// [2] & ( !\PC|Data_out [3] & ( \PC|Data_out [4] ) ) ) # ( !\PC|Data_out [2] & ( !\PC|Data_out [3] & ( \PC|Data_out [4] ) ) )

	.dataa(!\center|state [2]),
	.datab(!\PC|Data_out [4]),
	.datac(!\PC|Data_out [0]),
	.datad(!\PC|Data_out [1]),
	.datae(!\PC|Data_out [2]),
	.dataf(!\PC|Data_out [3]),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\PC|Data_out[4]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \PC|Data_out[4]~0 .extended_lut = "off";
defparam \PC|Data_out[4]~0 .lut_mask = 64'h3333333333333339;
defparam \PC|Data_out[4]~0 .shared_arith = "off";
// synopsys translate_on

dffeas \PC|Data_out[4] (
	.clk(!\clk~input_o ),
	.d(\PC|Data_out[4]~0_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\PC|Data_out [4]),
	.prn(vcc));
// synopsys translate_off
defparam \PC|Data_out[4] .is_wysiwyg = "true";
defparam \PC|Data_out[4] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \rom|rom~0 (
// Equation(s):
// \rom|rom~0_combout  = ( !\PC|Data_out [3] & ( (!\PC|Data_out [4] & ((!\PC|Data_out [0]) # (!\PC|Data_out [1] $ (!\PC|Data_out [2])))) ) )

	.dataa(!\PC|Data_out [4]),
	.datab(!\PC|Data_out [0]),
	.datac(!\PC|Data_out [1]),
	.datad(!\PC|Data_out [2]),
	.datae(!\PC|Data_out [3]),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\rom|rom~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \rom|rom~0 .extended_lut = "off";
defparam \rom|rom~0 .lut_mask = 64'h8AA800008AA80000;
defparam \rom|rom~0 .shared_arith = "off";
// synopsys translate_on

dffeas \rom|q[8] (
	.clk(!\clk~input_o ),
	.d(\rom|rom~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\rom|q [8]),
	.prn(vcc));
// synopsys translate_off
defparam \rom|q[8] .is_wysiwyg = "true";
defparam \rom|q[8] .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \reg_R|Data_out[0]~0 (
// Equation(s):
// \reg_R|Data_out[0]~0_combout  = (!\center|state [2] & (\reg_R|Data_out [0])) # (\center|state [2] & ((\rom|q [8])))

	.dataa(!\reg_R|Data_out [0]),
	.datab(!\center|state [2]),
	.datac(!\rom|q [8]),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\reg_R|Data_out[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \reg_R|Data_out[0]~0 .extended_lut = "off";
defparam \reg_R|Data_out[0]~0 .lut_mask = 64'h4747474747474747;
defparam \reg_R|Data_out[0]~0 .shared_arith = "off";
// synopsys translate_on

dffeas \reg_R|Data_out[0] (
	.clk(\clk~input_o ),
	.d(\reg_R|Data_out[0]~0_combout ),
	.asdata(vcc),
	.clrn(!\clrn~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\reg_R|Data_out [0]),
	.prn(vcc));
// synopsys translate_off
defparam \reg_R|Data_out[0] .is_wysiwyg = "true";
defparam \reg_R|Data_out[0] .power_up = "low";
// synopsys translate_on

dffeas \out[0]~reg0 (
	.clk(!\clk~input_o ),
	.d(\reg_R|Data_out [0]),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\out[0]~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \out[0]~reg0 .is_wysiwyg = "true";
defparam \out[0]~reg0 .power_up = "low";
// synopsys translate_on

assign out[0] = \out[0]~output_o ;

assign out[1] = \out[1]~output_o ;

assign out[2] = \out[2]~output_o ;

assign out[3] = \out[3]~output_o ;

assign out[4] = \out[4]~output_o ;

assign out[5] = \out[5]~output_o ;

assign out[6] = \out[6]~output_o ;

assign out[7] = \out[7]~output_o ;

endmodule
